{\rtf1\ansi\ansicpg1252\uc1\deff0
{\fonttbl{\f0\fmodern\fcharset0\fprq2 Calibri;}{\f1\fnil\fcharset0\fprq2 Calibri-Bold;}}
{\colortbl;\red0\green0\blue0;\red255\green255\blue255;\red128\green128\blue128;}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\fet2\ftnbj\aenddoc
\pgnrestart\pgnstarts0
\pard\plain \tx240\tx720\li720\fi-720\sl262\slmult1\ltrch\loch {\f0\fs26\b0\i0\cf1 \{#appendix_myWorkflow\}}
\par\plain \f0\fs26\b0\i0\cf1
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\ltrch\loch {\f0\fs26\b0\i0 It took me some time to put together a setup where I can focus mostly on writing and not on all related housekeeping tasks. I\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92m publishing it here in hope that it might give you ideas and inspiration.}
\par\plain \f0\fs26\b0\i0
\par\plain {\f0\fs26\b0\i0 My books are configured (on <$Scr_Cs::0>}{\f1\fs26\b1 Leanpub<!$Scr_Cs::0>}{\f0\fs26\b0\i0  [Leanpub]) to take data from a github repository. The repository uses `preview` and `publish` branches and Leanpub is configured to automatically generate a preview each time I push to the `preview` branch. Leanpub is configured to push generated books to Dropbox.}
\par\plain \f0\fs26\b0\i0
\par\plain {\f1\fs26\b1 <$Scr_Cs::0>Scrivener<!$Scr_Cs::0>}{\f0\fs26\b0\i0  [Scrivener] for editing. What else. I check my style and grammar with <$Scr_Cs::0>}{\f1\fs26\b1 ProWritingAid<!$Scr_Cs::0>}{\f0\fs26\b0\i0  [ProWritingAid], which knows how to read Scrivener files.}
\par\plain \f0\fs26\b0\i0
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl262\slmult1\ltrch\loch {\f1\fs26\b1 <$Scr_Cs::0>Scriv4lean<!$Scr_Cs::0>}{\f0\fs26\b0\i0  running in background with the help of the `pushpreview` [script](#}{\f0\fs26\b0\i0 appendix_myWorkflow_scripts) which automatically runs `scriv4lean` each time the book is exported from Scrivener and pushes changes to github if there were no compilation errors.}
\par\plain \f0\fs26\b0\i0
\par\plain {\f1\fs26\b1 <$Scr_Cs::0>SumatraPDF<!$Scr_Cs::0>}{\f0\fs26\b0\i0  [SumatraPDF] for previewing the generated PDF file. SumatraPDF fits this role well as it doesn\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92t keep the file lock and Dropbox can update to the new version of the PDF even when I\u8217\'92m vieweing it. It will also automatically reload the file whenever it is changed on the Dropbox. I use Microsoft Edge to preview EPUB format and Calibre [Calibre] to preview MOBI format.}
\par\plain \f0\fs26\b0\i0
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl262\slmult1\ltrch\loch {\f0\fs26\b0\i0 I\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92m using two virtual desktops with `scriv4lean` and SumatraPDF running on the secondary desktop. That way I can quickly switch from the editor to the preview and back.}
\par\plain \f0\fs26\b0\i0
\par\plain {\f0\fs26\b0\i0 My books include empty chapter named `Front matter: <\loch\af0\hich\af0\dbch\af0\uc1\u8203\'3F\u8203\'3F$year>-<\u8203\'3F\u8203\'3F$numericalmonth>-<\u8203\'3F\u8203\'3F$day>T<\u8203\'3F\u8203\'3F$time>`. Placeholders in the title are converted into current date/time during export from Scrivener. This helps me determine if I\u8217\'92m looking at the old or new version of the PDF file in the viewer. To make a published book, I manually exclude this chapter from the export.}
\par\pard\plain \tx0\tx360\tx720\tx1080\tx1440\tx1800\tx2160\tx2880\tx3600\tx4320\fi360\sl264\slmult1\ltrch\loch \f0\fs26\b0\i0
\par\plain {\f0\fs26\b0\i0 To maintain bibliography, I\loch\af0\hich\af0\dbch\af0\uc1\u8217\'92m using <$Scr_Cs::0>}{\f1\fs26\b1 Mendeley<!$Scr_Cs::0>}{\f0\fs26\b0\i0  [Mendeley]. I create one folder for each book and collect book bibliography in that folder. The Mendeley Desktop program can be set to automatically export each folder into separate `.bib` file. The `pushpreview` script is configured to use appropriate `.bib` file.}
\par\plain \f0\fs26\b0\i0
\par\plain {\f1\fs26\b1 <$Scr_Cs::0>GitKraken<!$Scr_Cs::0>}{\f0\fs26\b0\i0  [GitKraken] helps me manage git repositories. }
\par\plain \f0\fs26\b0\i0}